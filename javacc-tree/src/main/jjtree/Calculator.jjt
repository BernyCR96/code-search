options{  STATIC = false;  JDK_VERSION = "1.5";  MULTI = true;  NODE_DEFAULT_VOID = true;  NODE_SCOPE_HOOK = true;}PARSER_BEGIN(Calculator)package com.test.parser.tree;public class Calculator{  void jjtreeOpenNodeScope(Node n){    n.toString();  }  void jjtreeCloseNodeScope(Node n){    n.toString();  }}PARSER_END(Calculator)SKIP:{  " "  | "\t"  | "\n"  | "\r"}TOKEN:{  <INT:(["0"-"9"])+>}ASTStart start()#Start:{}{  expr(){    return jjtThis;  }}void expr()#Multinomial(>1):{}{  term()(add()term()  | sub()term())*}void term()#Monomial(>1):{}{  factor()(mul()factor()  | div()factor())*}void factor():{}{  "("expr()")"  | integer()}void add()#Add:{}{  "+"}void sub()#Sub:{}{  "-"}void mul()#Mul:{}{  "*"}void div()#Div:{}{  "/"}void integer()#Int:{  Token t;}{  t = <INT>{    jjtThis.setValue(Integer.parseInt(t.image));  }}